grid.arrange(p1, p2, p3, ncol=1)
p1 = ggplot(df, aes(x=pub_country, y=X2017sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45)) + ylim(0, 0.5)
p1
p1 = ggplot(df2, aes(x=pub_country, y=X2017sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45)) + ylim(0, 0.5)
p1
p2 = ggplot(df2, aes(x=pub_group_short, y=X2016snip)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45)) + ylim(0, 2)
p2
p1 = ggplot(df2, aes(x=pub_country, y=X2017cs)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45)) + ylim(0, 0.5)
p1
p2 = ggplot(df2, aes(x=pub_country, y=X2016sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=90)) + ylim(0, 0.5)
p2
p2 = ggplot(df2, aes(x=pub_country, y=X2016sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=90), size=8) + ylim(0, 0.5)
p2
p2 = ggplot(df2, aes(x=pub_country, y=X2016sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=90), size=6) + ylim(0, 0.5)
p2
theme(axis.text.x = element_text(angle=90, size=6) + ylim(0, 0.5)
p2 = ggplot(df2, aes(x=pub_country, y=X2016sjr)) +
p2 = ggplot(df2, aes(x=pub_country, y=X2016sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=90, size=6)) + ylim(0, 0.5)
p2
p1 = ggplot(df, aes(x=pub_group_short, y=X2017snip)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45)) + ylim(0, 2)
p1
p2 = ggplot(df, aes(x=pub_group_short, y=X2016snip)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45)) + ylim(0, 2)
p2
p3 = ggplot(df, aes(x=pub_group_short, y=X2015snip)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45)) + ylim(0, 2)
grid.arrange(p1, p2, p3, ncol=1)
p1 = ggplot(df, aes(x=pub_group_short, y=X2017sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45, size=8)) + ylim(0, 0.5)
p1
p2 = ggplot(df, aes(x=pub_group_short, y=X2016sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45, size=8)) + ylim(0, 0.5)
p2
p3 = ggplot(df2, aes(x=pub_group_short, y=X2015sjr)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45, size=8)) + ylim(0, 0.5)
p3
grid.arrange(p1, p2, p3, ncol=1)
p1 = ggplot(df, aes(x=pub_group_short, y=X2017cs)) +
geom_boxplot() +
theme_light() +
theme(axis.text.x = element_text(angle=45, size=8, hjust=1)) + ylim(0, 1.5)
p1
### histogram 2017 cs, sjr, snip
p1 = ggplot(df2, aes(x=X2017cs)) +
geom_histogram() +
theme_light() +
theme(axis.text.x = element_text(angle=45, size=8, hjust=1))
p1 = p1 + expand_limits(x=c(0,100))
p2 = ggplot(df2, aes(x=X2017sjr)) +
geom_histogram() +
theme_light() +
theme(axis.text.x = element_text(angle=45, size=8, hjust=1))
p2 = p2 + expand_limits(x=c(0,100))
p3 = ggplot(df2, aes(x=X2017snip)) +
geom_histogram() +
theme_light() +
theme(axis.text.x = element_text(angle=45, size=8, hjust=1))
p3 = p3 + expand_limits(x=c(0,100))
grid.arrange(p1, p2, p3, ncol=1)
itb.points = filter(df, pub_group_short == 'ITB')
View(itb.points)
p1 = ggplot(data = df, aes(x=X2017cs, y=X2017sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2017cs,
itb.points$X2017sjr,
label="ITB",
hjust=-0.1, vjust=1)
p2 = ggplot(data = df, aes(x=X2017cs, y=X2017snip, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2)+ theme(legend.position = 'none') +
annotate("text",
itb.points$X2017cs,
itb.points$X2017snip,
label="ITB",
hjust=-0.1, vjust=1)
grid.arrange(p1, p2, ncol=2)
p1 = ggplot(data = df, aes(x=X2015cs, y=X2015sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2017cs,
itb.points$X2017sjr,
label="ITB",
hjust=-0.1, vjust=1)
p2 = ggplot(data = df, aes(x=X2015cs, y=X2015snip, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2)+ theme(legend.position = 'none') +
annotate("text",
itb.points$X2017cs,
itb.points$X2017snip,
label="ITB",
hjust=-0.1, vjust=1)
grid.arrange(p1, p2, ncol=2)
p1 = ggplot(data = df, aes(x=X2015cs, y=X2015sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2015cs,
itb.points$X2015sjr,
label="ITB",
hjust=-0.1, vjust=1)
p1
p1 = ggplot(data = df, aes(x=X2017cs, y=X2017sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2017cs,
itb.points$X2017sjr,
label="ITB",
hjust=-0.1, vjust=1)
p1
p1 = ggplot(data = df, aes(x=X2015cs, y=X2015sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2015cs,
itb.points$X2015sjr,
label="ITB",
hjust=-0.1, vjust=1)
p2 = ggplot(data = df, aes(x=X2015cs, y=X2015snip, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2)+ theme(legend.position = 'none') +
annotate("text",
itb.points$X2015cs,
itb.points$X2015snip,
label="ITB",
hjust=-0.1, vjust=1)
grid.arrange(p1, p2, ncol=2)
p1 = ggplot(data = df, aes(x=X2016cs, y=X2016sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2016cs,
itb.points$X2016sjr,
label="ITB",
hjust=-0.1, vjust=1)
p2 = ggplot(data = df, aes(x=X2016cs, y=X2016snip, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2)+ theme(legend.position = 'none') +
annotate("text",
itb.points$X2016cs,
itb.points$X2016snip,
label="ITB",
hjust=-0.1, vjust=1)
grid.arrange(p1, p2, ncol=2)
p1 = ggplot(data = df, aes(x=X2017cs, y=X2017sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2017cs,
itb.points$X2017sjr,
label="ITB",
hjust=-0.1, vjust=1)
p2 = ggplot(data = df, aes(x=X2017cs, y=X2017snip, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2)+ theme(legend.position = 'none') +
annotate("text",
itb.points$X2017cs,
itb.points$X2017snip,
label="ITB",
hjust=-0.1, vjust=1)
grid.arrange(p1, p2, ncol=2)
p1 = ggplot(data = df, aes(x=X2016cs, y=X2016sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2016cs,
itb.points$X2016sjr,
label="ITB",
hjust=-0.1, vjust=1)
p2 = ggplot(data = df, aes(x=X2016cs, y=X2016snip, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2)+ theme(legend.position = 'none') +
annotate("text",
itb.points$X2016cs,
itb.points$X2016snip,
label="ITB",
hjust=-0.1, vjust=1)
grid.arrange(p1, p2, ncol=2)
p1 = ggplot(data = df, aes(x=X2015cs, y=X2015sjr, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2) + theme(legend.position = 'none') +
annotate("text",
itb.points$X2015cs,
itb.points$X2015sjr,
label="ITB",
hjust=-0.1, vjust=1)
p2 = ggplot(data = df, aes(x=X2015cs, y=X2015snip, color = pub_group_short)) +
geom_point() + xlim(0, 2) + ylim(0, 2)+ theme(legend.position = 'none') +
annotate("text",
itb.points$X2015cs,
itb.points$X2015snip,
label="ITB",
hjust=-0.1, vjust=1)
grid.arrange(p1, p2, ncol=2)
setwd("~/Desktop/pub_lansekap/code")
library('rcrossref')
install.packages('rcrossref')
library('devtools')
install_github('ropensci/rcrossref')
install_github('ropensci/rcrossref')
install.packages('rcrossref')
install.packages('rcrossref')
install_github('ropensci/rcrossref')
d = read.csv('sinta_ts/sinta_ts.csv')
head(d)
library('tidyverse')
library('corrplot')
View(d)
res = rcorr(d[,5:12])
library('corrplot')
library('tidyverse')
library('corrplot')
res = rcorr(d[,5:12])
res = rcorr(d[,5:12])
library('corrplot')
library('tidyverse')
library('corrplot')
d = read.csv('sinta_ts/sinta_ts.csv')
head(d)
res = rcorr(d[,5:12])
res = rcorr(d[,5:12])
res = cor(d[,5:12])
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
# Insignificant correlation are crossed
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
res <- rcorr(as.matrix(d[,5:12]))
res <- rcor(as.matrix(d[,5:12]))
library('hmisc')
#install.packages('tidyverse')
library('tidyverse')
#install.packages('corrplot')
library('corrplot')
install.packages('hmisc')
library('hmisc')
#install.packages('tidyverse')
library('tidyverse')
#install.packages('corrplot')
library('corrplot')
install.packages('Hmisc')
library('Hmisc')
## load data
d = read.csv('sinta_ts/sinta_ts.csv')
## view data
head(d)
## calculating correlation matrix
res = cor(d[,5:12])
## plotting correlation matrix
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
## calculating using hmisc
res = rcorr(as.matrix(d[,5:12]))
flattenCorrMatrix(res$r, res$P)
flattenCorrMatrix(res$r, res$P)
## Insignificant correlation are crossed
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
## Insignificant correlation are crossed
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "crossed")
## Insignificant correlation are crossed
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "n")
## Insignificant correlations are leaved blank
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
## calculating using hmisc
res = rcorr(as.matrix(d[,5:12]))
## Insignificant correlations are leaved blank
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
## Insignificant correlations are leaved blank
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
## Insignificant correlations are leaved blank
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
## calculating using hmisc
res = rcorr(as.matrix(d[,5:12]))
## plotting correlation matrix
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
library("PerformanceAnalytics")
install.packages("PerformanceAnalytics")
d <- d[, 5:12]
chart.Correlation(d, histogram=TRUE, pch=19)
library("PerformanceAnalytics")
d <- d[, 5:12]
chart.Correlation(d, histogram=TRUE, pch=19)
d <- d[,5:12]
## load data
d = read.csv('sinta_ts/sinta_ts.csv')
d <- d[,5:12]
chart.Correlation(d, histogram=TRUE, pch=19)
heatmap(x = res, symm = TRUE)
## calculating using hmisc
res = rcorr(as.matrix(d[,5:12]))
## load data
d = read.csv('sinta_ts/sinta_ts.csv')
## calculating using hmisc
res = rcorr(as.matrix(d[,5:12]))
heatmap(x = res, symm = TRUE)
## calculating using hmisc
res = rcorr(as.matrix(d[,5:12]))
heatmap(x = res, symm = TRUE)
## load data
d = read.csv('sinta_ts/sinta_ts.csv')
## calculating using hmisc
res = rcorr(as.matrix(d[,5:12]))
## plotting correlation matrix
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
chart.Correlation(d[,5:12], histogram=TRUE, pch=19)
## some manipulation
d$sumdoc3 = (d$sumdoc2 / d$sumdoc)
arrange(d, desc(sumdoc3))
ggplot(data=d, aes(x=name, y=sumdoc3)) +
geom_bar(stat="identity")
p + coord_flip()
p = ggplot(data=d, aes(x=name, y=sumdoc3)) +
geom_bar(stat="identity")
p + coord_flip()
## sorting based on sumdoc3
d = arrange(d, desc(sumdoc3))
p = ggplot(data=d, aes(x=name, y=sumdoc3)) +
geom_bar(stat="identity")
p + coord_flip()
d
View(d)
p = ggplot(data=d, aes(x=name, y=sumdoc3, fill=grup)) +
geom_bar(stat="identity")
p + coord_flip()
## sorting based on sumdoc3
d = arrange(d, desc(sumdoc3))
p = ggplot(data=d, aes(x=name, y=sumdoc3, fill=grup)) +
geom_bar(stat="identity")
p + coord_flip()
p = ggplot(data=d, aes(x=name, y=reorder(sumdoc3), fill=grup)) +
geom_bar(stat="identity")
p + coord_flip()
p = ggplot(data=d, aes(x=name, y=reorder(sumdoc3), fill=grup)) +
geom_bar(stat="identity")
p
p = ggplot(data=d, aes(x=no, y=reorder(~sumdoc3), fill=grup)) +
geom_bar(stat="identity")
p
p = ggplot(data=d, aes(x=no, y=reorder(-sumdoc3), fill=grup)) +
geom_bar(stat="identity")
p
p = ggplot(data=d, aes(x=nama, y=reorder(-sumdoc3), fill=grup)) +
geom_bar(stat="identity")
p
p = ggplot(data=d, aes(x=name, y=reorder(-sumdoc3), fill=grup)) +
geom_bar(stat="identity")
p
p = ggplot(data=d, aes(x=name, y=reorder(-sumdoc3), fill=grup)) +
geom_bar(stat="identity")
p = ggplot(data=d, aes(x=reorder(name, -sumdoc3), y=sumdoc3, fill=grup)) +
geom_bar(stat="identity")
p
p + coord_flip()
p = ggplot(data=d, aes(x=reorder(name, -sumdoc3), y=sumdoc3, fill=grup))+
geom_bar(stat="identity")
p + coord_flip()
p = ggplot(data=d, aes(x=reorder(name, -sumdoc3), y=sumdoc3, fill=grup))+
geom_bar(stat="identity")
p + theme(axis.text=element_text(size=10),
axis.title=element_text(size=10,face="bold"))
p + coord_flip()
p = ggplot(data=d, aes(x=reorder(name, -sumdoc3), y=sumdoc3, fill=grup))+
geom_bar(stat="identity")
p + theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold"))
p + coord_flip()
p = ggplot(data=d, aes(x=reorder(name, sumdoc3), y=sumdoc3, fill=grup))+
geom_bar(stat="identity")
p + theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold"))
p + coord_flip()
p = ggplot(data=d, aes(x=reorder(name, sumdoc3), y=sumdoc3, fill=grup))+
geom_bar(stat="identity")
p + theme(axis.text=element_text(size=8),
axis.title=element_text(size=8))
p + coord_flip()
p = ggplot(data=d, aes(x=reorder(name, sumdoc3), y=sumdoc3, fill=grup))+
geom_bar(stat="identity")
p + theme(axis.text=element_text(size=6),
axis.title=element_text(size=6))
p + coord_flip()
p = ggplot(data=d, aes(x=hind2), y=hind3, fill=grup))+
geom_bar(stat="identity")
p = ggplot(data=d, aes(x=hind2), y=hind3, fill=grup))+
geom_bar(stat="identity")
p = ggplot(data=d, aes(x=hind2, y=hind3, fill=grup))+
geom_bar(stat="identity")
p
p = ggplot(data=d, aes(x=hind2, y=hind3, fill=grup))+
geom_point(stat="identity")
p
p = ggplot(data=d, aes(x=hind2, y=hind3, fill=grup))+
geom_point()
p
ggplot(data=d, aes(x=hind2, y=hind3, fill=grup))+
geom_point()
ggplot(data=d, aes(x=hind2, y=hind3, col=grup))+
geom_point()
ggplot(data=d, aes(x=hind, y=hind3, col=grup))+
geom_point()
ggplot(data=d, aes(x=hind2, y=hind3, col=grup))+
geom_point() + geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)
ggplot(data=d, aes(x=hind, y=hind3, col=grup))+
geom_point() + geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)
summary(m)
m <- lm(hind3 ~ hind2, data = d)
summary(m)
m <- lm(hind3 ~ hind2, data = d)
summary(m)
m <- lm(hind3 ~ hind, data = d)
summary(m)
## cluster analysis
dd <- dist(scale(d), method = "euclidean")
## cluster analysis
dd <- dist(scale(d[,5:12]), method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc)
plot(hc, hang = -1, cex = 0.6)
plot(hc, hang = -1, cex = 0.6m, ylab = "Height", xlab = "name")
plot(hc, hang = -1, cex = 0.6, ylab = "Height", xlab = "name")
plot(hc, hang = -1, cex = 0.6, ylab = "Height", xlab = "name")
plot(hc, labels = name, hang = -1, cex = 0.6, ylab = "Height", xlab = "name")
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "name")
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "name", col=factor(d$grup))
## cluster analysis
dd <- dist(scale(d[,5:12]), method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "name", col=factor(d$grup))
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "Name", col=factor(d$grup))
d$grup
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "Name", fill=factor(d$grup))
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "Name", col=as.factor(d$grup))
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "Name", col=as.factor(d$grup))
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "Name", col=as.factor(d$grup))
library('ape')
install.packages('ape')
library('ape')
plot(as.phylo(hc), type = "unrooted", cex = 0.6,
no.margin = TRUE)
plot(hc, labels = d$name, hang = -1, cex = 0.6, ylab = "Height", xlab = "Name", col=as.factor(d$grup))
installed.packages('reveal.js')
install.packages('reveal.js')
library(revealjs)
library(reveal,js)
library(reveal.js)
install.packages("revealjs", type = "source")
library(reveal.js)
library(revealjs)
d = read.csv('scopus_climate_2006.csv')
d = read.csv('citescore_anl/scopus_climate_2006.csv')
plot(d$age, d$Cited.by)
corel <- lm(d$Cited.by~d$age)
d = read.csv('citescore_anl/scopus_climate_2006.csv')
View(d)
plot(d$age, d$Cited.by)
View(data.cc)
d = read.csv('citescore_anl/scopus_climate_allyears.csv')
plot(d$age, d$Cited.by)
corel <- lm(d$Cited.by~d$age)
print(summary(corel))
d2 = read.csv('citescore_anl/scopus_paleontology_allyears.csv')
plot(d2$age, d2$Cited.by)
d2$age = 2017-d$Year
d2$age = 2017 - d$Year
plot(d2$age, d2$Cited.by)
View(d)
View(d2)
d2$age = 2017 - d2$Year
plot(d2$age, d2$Cited.by)
corel <- lm(d2$Cited.by~d2$age)
print(summary(corel))
d3 = read.csv('citescore_anl/scopus_sedimentology_allyears.csv')
d3 = read.csv('citescore_anl/scopus_sedimentology_allyears.csv')
d3$age = 2017 - d3$Year
plot(d3$age, d3$Cited.by)
corel <- lm(d3$Cited.by~d3$age)
print(summary(corel))
d4 = read.csv('citescore_anl/scopus_structure_allyears.csv')
